
test_board1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006f8  08000298  08000298  00001298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000990  08000998  00001998  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  08000990  08000990  00001990  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .fini_array   00000004  08000994  08000994  00001994  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .data         00000000  24000000  24000000  00001998  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000001c  24000000  08000998  00002000  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  2400001c  08000998  0000201c  2**0
                  ALLOC
  8 .ARM.attributes 0000002e  00000000  00000000  00001998  2**0
                  CONTENTS, READONLY
  9 .debug_info   00000fe8  00000000  00000000  000019c6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000034a  00000000  00000000  000029ae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges 000000c0  00000000  00000000  00002cf8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 00000085  00000000  00000000  00002db8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_macro  000022b5  00000000  00000000  00002e3d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   00000f1d  00000000  00000000  000050f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    0000b64b  00000000  00000000  0000600f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment      00000043  00000000  00000000  0001165a  2**0
                  CONTENTS, READONLY
 17 .debug_frame  0000024c  00000000  00000000  000116a0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 0000003e  00000000  00000000  000118ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000298 <__do_global_dtors_aux>:
 8000298:	b510      	push	{r4, lr}
 800029a:	4c05      	ldr	r4, [pc, #20]	@ (80002b0 <__do_global_dtors_aux+0x18>)
 800029c:	7823      	ldrb	r3, [r4, #0]
 800029e:	b933      	cbnz	r3, 80002ae <__do_global_dtors_aux+0x16>
 80002a0:	4b04      	ldr	r3, [pc, #16]	@ (80002b4 <__do_global_dtors_aux+0x1c>)
 80002a2:	b113      	cbz	r3, 80002aa <__do_global_dtors_aux+0x12>
 80002a4:	4804      	ldr	r0, [pc, #16]	@ (80002b8 <__do_global_dtors_aux+0x20>)
 80002a6:	f3af 8000 	nop.w
 80002aa:	2301      	movs	r3, #1
 80002ac:	7023      	strb	r3, [r4, #0]
 80002ae:	bd10      	pop	{r4, pc}
 80002b0:	24000000 	.word	0x24000000
 80002b4:	00000000 	.word	0x00000000
 80002b8:	08000978 	.word	0x08000978

080002bc <frame_dummy>:
 80002bc:	b508      	push	{r3, lr}
 80002be:	4b03      	ldr	r3, [pc, #12]	@ (80002cc <frame_dummy+0x10>)
 80002c0:	b11b      	cbz	r3, 80002ca <frame_dummy+0xe>
 80002c2:	4903      	ldr	r1, [pc, #12]	@ (80002d0 <frame_dummy+0x14>)
 80002c4:	4803      	ldr	r0, [pc, #12]	@ (80002d4 <frame_dummy+0x18>)
 80002c6:	f3af 8000 	nop.w
 80002ca:	bd08      	pop	{r3, pc}
 80002cc:	00000000 	.word	0x00000000
 80002d0:	24000004 	.word	0x24000004
 80002d4:	08000978 	.word	0x08000978

080002d8 <delay>:

#include <stdint.h>
#include "stm32h753xx.h"

void delay(void)
{
 80002d8:	b480      	push	{r7}
 80002da:	b083      	sub	sp, #12
 80002dc:	af00      	add	r7, sp, #0
    for(uint32_t i = 0; i < 500000; i++);
 80002de:	2300      	movs	r3, #0
 80002e0:	607b      	str	r3, [r7, #4]
 80002e2:	e002      	b.n	80002ea <delay+0x12>
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	3301      	adds	r3, #1
 80002e8:	607b      	str	r3, [r7, #4]
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	4a04      	ldr	r2, [pc, #16]	@ (8000300 <delay+0x28>)
 80002ee:	4293      	cmp	r3, r2
 80002f0:	d9f8      	bls.n	80002e4 <delay+0xc>
}
 80002f2:	bf00      	nop
 80002f4:	bf00      	nop
 80002f6:	370c      	adds	r7, #12
 80002f8:	46bd      	mov	sp, r7
 80002fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002fe:	4770      	bx	lr
 8000300:	0007a11f 	.word	0x0007a11f

08000304 <main>:
int main(void)
{
 8000304:	b580      	push	{r7, lr}
 8000306:	b084      	sub	sp, #16
 8000308:	af00      	add	r7, sp, #0
    GPIO_Handle_t GpioLed;

    GpioLed.pGPIOx = GPIOA;
 800030a:	4b0e      	ldr	r3, [pc, #56]	@ (8000344 <main+0x40>)
 800030c:	607b      	str	r3, [r7, #4]
    GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_3;
 800030e:	2303      	movs	r3, #3
 8000310:	723b      	strb	r3, [r7, #8]
    GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ANALOG;
 8000312:	2303      	movs	r3, #3
 8000314:	727b      	strb	r3, [r7, #9]
    GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000316:	2302      	movs	r3, #2
 8000318:	72bb      	strb	r3, [r7, #10]
    GpioLed.GPIO_PinConfig.GPIO_PinOtype = GPIO_OP_TYPE_PP;
 800031a:	2300      	movs	r3, #0
 800031c:	733b      	strb	r3, [r7, #12]
    GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_NO_PUPD;
 800031e:	2300      	movs	r3, #0
 8000320:	72fb      	strb	r3, [r7, #11]

    GPIO_PeriClockContrl(GPIOA, Enable);
 8000322:	2101      	movs	r1, #1
 8000324:	4807      	ldr	r0, [pc, #28]	@ (8000344 <main+0x40>)
 8000326:	f000 f80f 	bl	8000348 <GPIO_PeriClockContrl>

    GPIO_Init(&GpioLed);
 800032a:	1d3b      	adds	r3, r7, #4
 800032c:	4618      	mov	r0, r3
 800032e:	f000 f8fb 	bl	8000528 <GPIO_Init>

    while(1)
    {
        GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_3);
 8000332:	2103      	movs	r1, #3
 8000334:	4803      	ldr	r0, [pc, #12]	@ (8000344 <main+0x40>)
 8000336:	f000 fabb 	bl	80008b0 <GPIO_ToggleOutputPin>
        delay();
 800033a:	f7ff ffcd 	bl	80002d8 <delay>
        GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_3);
 800033e:	bf00      	nop
 8000340:	e7f7      	b.n	8000332 <main+0x2e>
 8000342:	bf00      	nop
 8000344:	58020000 	.word	0x58020000

08000348 <GPIO_PeriClockContrl>:
/* documentation of every function has to be done for all the functions separately */

//periperal clock configuartion

void GPIO_PeriClockContrl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000348:	b480      	push	{r7}
 800034a:	b083      	sub	sp, #12
 800034c:	af00      	add	r7, sp, #0
 800034e:	6078      	str	r0, [r7, #4]
 8000350:	460b      	mov	r3, r1
 8000352:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == Enable)
 8000354:	78fb      	ldrb	r3, [r7, #3]
 8000356:	2b01      	cmp	r3, #1
 8000358:	d167      	bne.n	800042a <GPIO_PeriClockContrl+0xe2>
	{
		if(pGPIOx == GPIOA)
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	4a69      	ldr	r2, [pc, #420]	@ (8000504 <GPIO_PeriClockContrl+0x1bc>)
 800035e:	4293      	cmp	r3, r2
 8000360:	d108      	bne.n	8000374 <GPIO_PeriClockContrl+0x2c>
			GPIOA_PCLK_EN();
 8000362:	4b69      	ldr	r3, [pc, #420]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 8000364:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000368:	4a67      	ldr	r2, [pc, #412]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 800036a:	f043 0301 	orr.w	r3, r3, #1
 800036e:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
					GPIOG_PCLK_DEN();
				else if(pGPIOx == GPIOH)
					GPIOH_PCLK_DEN();
	}

};
 8000372:	e0c1      	b.n	80004f8 <GPIO_PeriClockContrl+0x1b0>
		else if(pGPIOx == GPIOB)
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	4a65      	ldr	r2, [pc, #404]	@ (800050c <GPIO_PeriClockContrl+0x1c4>)
 8000378:	4293      	cmp	r3, r2
 800037a:	d108      	bne.n	800038e <GPIO_PeriClockContrl+0x46>
			GPIOB_PCLK_EN();
 800037c:	4b62      	ldr	r3, [pc, #392]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 800037e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000382:	4a61      	ldr	r2, [pc, #388]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 8000384:	f043 0302 	orr.w	r3, r3, #2
 8000388:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
};
 800038c:	e0b4      	b.n	80004f8 <GPIO_PeriClockContrl+0x1b0>
		else if(pGPIOx == GPIOC)
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	4a5f      	ldr	r2, [pc, #380]	@ (8000510 <GPIO_PeriClockContrl+0x1c8>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d108      	bne.n	80003a8 <GPIO_PeriClockContrl+0x60>
			GPIOC_PCLK_EN();
 8000396:	4b5c      	ldr	r3, [pc, #368]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 8000398:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800039c:	4a5a      	ldr	r2, [pc, #360]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 800039e:	f043 0304 	orr.w	r3, r3, #4
 80003a2:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
};
 80003a6:	e0a7      	b.n	80004f8 <GPIO_PeriClockContrl+0x1b0>
		else if(pGPIOx == GPIOD)
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	4a5a      	ldr	r2, [pc, #360]	@ (8000514 <GPIO_PeriClockContrl+0x1cc>)
 80003ac:	4293      	cmp	r3, r2
 80003ae:	d108      	bne.n	80003c2 <GPIO_PeriClockContrl+0x7a>
			GPIOD_PCLK_EN();
 80003b0:	4b55      	ldr	r3, [pc, #340]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 80003b2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80003b6:	4a54      	ldr	r2, [pc, #336]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 80003b8:	f043 0308 	orr.w	r3, r3, #8
 80003bc:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
};
 80003c0:	e09a      	b.n	80004f8 <GPIO_PeriClockContrl+0x1b0>
		else if(pGPIOx == GPIOE)
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	4a54      	ldr	r2, [pc, #336]	@ (8000518 <GPIO_PeriClockContrl+0x1d0>)
 80003c6:	4293      	cmp	r3, r2
 80003c8:	d108      	bne.n	80003dc <GPIO_PeriClockContrl+0x94>
			GPIOE_PCLK_EN();
 80003ca:	4b4f      	ldr	r3, [pc, #316]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 80003cc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80003d0:	4a4d      	ldr	r2, [pc, #308]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 80003d2:	f043 0310 	orr.w	r3, r3, #16
 80003d6:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
};
 80003da:	e08d      	b.n	80004f8 <GPIO_PeriClockContrl+0x1b0>
		else if(pGPIOx == GPIOF)
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	4a4f      	ldr	r2, [pc, #316]	@ (800051c <GPIO_PeriClockContrl+0x1d4>)
 80003e0:	4293      	cmp	r3, r2
 80003e2:	d108      	bne.n	80003f6 <GPIO_PeriClockContrl+0xae>
			GPIOF_PCLK_EN();
 80003e4:	4b48      	ldr	r3, [pc, #288]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 80003e6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80003ea:	4a47      	ldr	r2, [pc, #284]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 80003ec:	f043 0320 	orr.w	r3, r3, #32
 80003f0:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
};
 80003f4:	e080      	b.n	80004f8 <GPIO_PeriClockContrl+0x1b0>
		else if(pGPIOx == GPIOG)
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	4a49      	ldr	r2, [pc, #292]	@ (8000520 <GPIO_PeriClockContrl+0x1d8>)
 80003fa:	4293      	cmp	r3, r2
 80003fc:	d108      	bne.n	8000410 <GPIO_PeriClockContrl+0xc8>
			GPIOG_PCLK_EN();
 80003fe:	4b42      	ldr	r3, [pc, #264]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 8000400:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000404:	4a40      	ldr	r2, [pc, #256]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 8000406:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800040a:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
};
 800040e:	e073      	b.n	80004f8 <GPIO_PeriClockContrl+0x1b0>
		else if(pGPIOx == GPIOH)
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	4a44      	ldr	r2, [pc, #272]	@ (8000524 <GPIO_PeriClockContrl+0x1dc>)
 8000414:	4293      	cmp	r3, r2
 8000416:	d16f      	bne.n	80004f8 <GPIO_PeriClockContrl+0x1b0>
			GPIOH_PCLK_EN();
 8000418:	4b3b      	ldr	r3, [pc, #236]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 800041a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800041e:	4a3a      	ldr	r2, [pc, #232]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 8000420:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000424:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
};
 8000428:	e066      	b.n	80004f8 <GPIO_PeriClockContrl+0x1b0>
		if(pGPIOx == GPIOA)
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	4a35      	ldr	r2, [pc, #212]	@ (8000504 <GPIO_PeriClockContrl+0x1bc>)
 800042e:	4293      	cmp	r3, r2
 8000430:	d108      	bne.n	8000444 <GPIO_PeriClockContrl+0xfc>
					GPIOA_PCLK_DEN();
 8000432:	4b35      	ldr	r3, [pc, #212]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 8000434:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8000438:	4a33      	ldr	r2, [pc, #204]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 800043a:	f003 0301 	and.w	r3, r3, #1
 800043e:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
};
 8000442:	e059      	b.n	80004f8 <GPIO_PeriClockContrl+0x1b0>
				else if(pGPIOx == GPIOB)
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	4a31      	ldr	r2, [pc, #196]	@ (800050c <GPIO_PeriClockContrl+0x1c4>)
 8000448:	4293      	cmp	r3, r2
 800044a:	d108      	bne.n	800045e <GPIO_PeriClockContrl+0x116>
					GPIOB_PCLK_DEN();
 800044c:	4b2e      	ldr	r3, [pc, #184]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 800044e:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8000452:	4a2d      	ldr	r2, [pc, #180]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 8000454:	f003 0302 	and.w	r3, r3, #2
 8000458:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
};
 800045c:	e04c      	b.n	80004f8 <GPIO_PeriClockContrl+0x1b0>
				else if(pGPIOx == GPIOC)
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	4a2b      	ldr	r2, [pc, #172]	@ (8000510 <GPIO_PeriClockContrl+0x1c8>)
 8000462:	4293      	cmp	r3, r2
 8000464:	d108      	bne.n	8000478 <GPIO_PeriClockContrl+0x130>
					GPIOC_PCLK_DEN();
 8000466:	4b28      	ldr	r3, [pc, #160]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 8000468:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800046c:	4a26      	ldr	r2, [pc, #152]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 800046e:	f003 0304 	and.w	r3, r3, #4
 8000472:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
};
 8000476:	e03f      	b.n	80004f8 <GPIO_PeriClockContrl+0x1b0>
				else if(pGPIOx == GPIOD)
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	4a26      	ldr	r2, [pc, #152]	@ (8000514 <GPIO_PeriClockContrl+0x1cc>)
 800047c:	4293      	cmp	r3, r2
 800047e:	d108      	bne.n	8000492 <GPIO_PeriClockContrl+0x14a>
					GPIOD_PCLK_DEN();
 8000480:	4b21      	ldr	r3, [pc, #132]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 8000482:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8000486:	4a20      	ldr	r2, [pc, #128]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 8000488:	f003 0308 	and.w	r3, r3, #8
 800048c:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
};
 8000490:	e032      	b.n	80004f8 <GPIO_PeriClockContrl+0x1b0>
				else if(pGPIOx == GPIOE)
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	4a20      	ldr	r2, [pc, #128]	@ (8000518 <GPIO_PeriClockContrl+0x1d0>)
 8000496:	4293      	cmp	r3, r2
 8000498:	d108      	bne.n	80004ac <GPIO_PeriClockContrl+0x164>
					GPIOE_PCLK_DEN();
 800049a:	4b1b      	ldr	r3, [pc, #108]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 800049c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 80004a0:	4a19      	ldr	r2, [pc, #100]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 80004a2:	f003 0310 	and.w	r3, r3, #16
 80004a6:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
};
 80004aa:	e025      	b.n	80004f8 <GPIO_PeriClockContrl+0x1b0>
				else if(pGPIOx == GPIOF)
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	4a1b      	ldr	r2, [pc, #108]	@ (800051c <GPIO_PeriClockContrl+0x1d4>)
 80004b0:	4293      	cmp	r3, r2
 80004b2:	d108      	bne.n	80004c6 <GPIO_PeriClockContrl+0x17e>
					GPIOF_PCLK_DEN();
 80004b4:	4b14      	ldr	r3, [pc, #80]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 80004b6:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 80004ba:	4a13      	ldr	r2, [pc, #76]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 80004bc:	f003 0320 	and.w	r3, r3, #32
 80004c0:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
};
 80004c4:	e018      	b.n	80004f8 <GPIO_PeriClockContrl+0x1b0>
				else if(pGPIOx == GPIOG)
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	4a15      	ldr	r2, [pc, #84]	@ (8000520 <GPIO_PeriClockContrl+0x1d8>)
 80004ca:	4293      	cmp	r3, r2
 80004cc:	d108      	bne.n	80004e0 <GPIO_PeriClockContrl+0x198>
					GPIOG_PCLK_DEN();
 80004ce:	4b0e      	ldr	r3, [pc, #56]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 80004d0:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 80004d4:	4a0c      	ldr	r2, [pc, #48]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 80004d6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80004da:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
};
 80004de:	e00b      	b.n	80004f8 <GPIO_PeriClockContrl+0x1b0>
				else if(pGPIOx == GPIOH)
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	4a10      	ldr	r2, [pc, #64]	@ (8000524 <GPIO_PeriClockContrl+0x1dc>)
 80004e4:	4293      	cmp	r3, r2
 80004e6:	d107      	bne.n	80004f8 <GPIO_PeriClockContrl+0x1b0>
					GPIOH_PCLK_DEN();
 80004e8:	4b07      	ldr	r3, [pc, #28]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 80004ea:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 80004ee:	4a06      	ldr	r2, [pc, #24]	@ (8000508 <GPIO_PeriClockContrl+0x1c0>)
 80004f0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80004f4:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
};
 80004f8:	bf00      	nop
 80004fa:	370c      	adds	r7, #12
 80004fc:	46bd      	mov	sp, r7
 80004fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000502:	4770      	bx	lr
 8000504:	58020000 	.word	0x58020000
 8000508:	58024400 	.word	0x58024400
 800050c:	58020400 	.word	0x58020400
 8000510:	58020800 	.word	0x58020800
 8000514:	58020c00 	.word	0x58020c00
 8000518:	58021000 	.word	0x58021000
 800051c:	58021400 	.word	0x58021400
 8000520:	58021800 	.word	0x58021800
 8000524:	58021c00 	.word	0x58021c00

08000528 <GPIO_Init>:
*/



void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000528:	b580      	push	{r7, lr}
 800052a:	b086      	sub	sp, #24
 800052c:	af00      	add	r7, sp, #0
 800052e:	6078      	str	r0, [r7, #4]
    uint8_t temp = 0;  // Temporary register
 8000530:	2300      	movs	r3, #0
 8000532:	75fb      	strb	r3, [r7, #23]
    uint16_t Rand = 0;  // Temporary register
 8000534:	2300      	movs	r3, #0
 8000536:	82bb      	strh	r3, [r7, #20]

    // Enable the peripheral clock
    GPIO_PeriClockContrl(pGPIOHandle->pGPIOx, Enable);
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	2101      	movs	r1, #1
 800053e:	4618      	mov	r0, r3
 8000540:	f7ff ff02 	bl	8000348 <GPIO_PeriClockContrl>

    // 1. Configure the mode of GPIO pin
    if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	795b      	ldrb	r3, [r3, #5]
 8000548:	2b03      	cmp	r3, #3
 800054a:	d820      	bhi.n	800058e <GPIO_Init+0x66>
    {

    	Rand = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	795b      	ldrb	r3, [r3, #5]
 8000550:	461a      	mov	r2, r3
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	791b      	ldrb	r3, [r3, #4]
 8000556:	005b      	lsls	r3, r3, #1
 8000558:	fa02 f303 	lsl.w	r3, r2, r3
 800055c:	82bb      	strh	r3, [r7, #20]
        pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // Clearing
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	681b      	ldr	r3, [r3, #0]
 8000562:	681a      	ldr	r2, [r3, #0]
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	791b      	ldrb	r3, [r3, #4]
 8000568:	005b      	lsls	r3, r3, #1
 800056a:	2103      	movs	r1, #3
 800056c:	fa01 f303 	lsl.w	r3, r1, r3
 8000570:	43db      	mvns	r3, r3
 8000572:	4619      	mov	r1, r3
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	400a      	ands	r2, r1
 800057a:	601a      	str	r2, [r3, #0]
        pGPIOHandle->pGPIOx->MODER |= Rand;  // Setting
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	681b      	ldr	r3, [r3, #0]
 8000580:	6819      	ldr	r1, [r3, #0]
 8000582:	8aba      	ldrh	r2, [r7, #20]
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	681b      	ldr	r3, [r3, #0]
 8000588:	430a      	orrs	r2, r1
 800058a:	601a      	str	r2, [r3, #0]
 800058c:	e0d6      	b.n	800073c <GPIO_Init+0x214>
    }
    else
    {
        // Handle interrupt mode configuration later
        if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	795b      	ldrb	r3, [r3, #5]
 8000592:	2b04      	cmp	r3, #4
 8000594:	d11b      	bne.n	80005ce <GPIO_Init+0xa6>
        {
            // 1. Configure FTSR
            EXTI->FTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000596:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 800059a:	685b      	ldr	r3, [r3, #4]
 800059c:	687a      	ldr	r2, [r7, #4]
 800059e:	7912      	ldrb	r2, [r2, #4]
 80005a0:	4611      	mov	r1, r2
 80005a2:	2201      	movs	r2, #1
 80005a4:	408a      	lsls	r2, r1
 80005a6:	4611      	mov	r1, r2
 80005a8:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 80005ac:	430b      	orrs	r3, r1
 80005ae:	6053      	str	r3, [r2, #4]
            // Clear the corresponding RTSR bit
            EXTI->RTSR1 &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005b0:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	687a      	ldr	r2, [r7, #4]
 80005b8:	7912      	ldrb	r2, [r2, #4]
 80005ba:	4611      	mov	r1, r2
 80005bc:	2201      	movs	r2, #1
 80005be:	408a      	lsls	r2, r1
 80005c0:	43d2      	mvns	r2, r2
 80005c2:	4611      	mov	r1, r2
 80005c4:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 80005c8:	400b      	ands	r3, r1
 80005ca:	6013      	str	r3, [r2, #0]
 80005cc:	e03d      	b.n	800064a <GPIO_Init+0x122>
        }
        else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	795b      	ldrb	r3, [r3, #5]
 80005d2:	2b05      	cmp	r3, #5
 80005d4:	d11b      	bne.n	800060e <GPIO_Init+0xe6>
        {
            // 1. Configure RTSR
            EXTI->RTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005d6:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	687a      	ldr	r2, [r7, #4]
 80005de:	7912      	ldrb	r2, [r2, #4]
 80005e0:	4611      	mov	r1, r2
 80005e2:	2201      	movs	r2, #1
 80005e4:	408a      	lsls	r2, r1
 80005e6:	4611      	mov	r1, r2
 80005e8:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 80005ec:	430b      	orrs	r3, r1
 80005ee:	6013      	str	r3, [r2, #0]
            // Clear the corresponding FTSR bit
            EXTI->FTSR1 &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005f0:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 80005f4:	685b      	ldr	r3, [r3, #4]
 80005f6:	687a      	ldr	r2, [r7, #4]
 80005f8:	7912      	ldrb	r2, [r2, #4]
 80005fa:	4611      	mov	r1, r2
 80005fc:	2201      	movs	r2, #1
 80005fe:	408a      	lsls	r2, r1
 8000600:	43d2      	mvns	r2, r2
 8000602:	4611      	mov	r1, r2
 8000604:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8000608:	400b      	ands	r3, r1
 800060a:	6053      	str	r3, [r2, #4]
 800060c:	e01d      	b.n	800064a <GPIO_Init+0x122>
        }
        else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	795b      	ldrb	r3, [r3, #5]
 8000612:	2b06      	cmp	r3, #6
 8000614:	d119      	bne.n	800064a <GPIO_Init+0x122>
        {
            // 1. Configure for both FTSR and RTSR
            EXTI->RTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000616:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 800061a:	681b      	ldr	r3, [r3, #0]
 800061c:	687a      	ldr	r2, [r7, #4]
 800061e:	7912      	ldrb	r2, [r2, #4]
 8000620:	4611      	mov	r1, r2
 8000622:	2201      	movs	r2, #1
 8000624:	408a      	lsls	r2, r1
 8000626:	4611      	mov	r1, r2
 8000628:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 800062c:	430b      	orrs	r3, r1
 800062e:	6013      	str	r3, [r2, #0]
            EXTI->FTSR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000630:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8000634:	685b      	ldr	r3, [r3, #4]
 8000636:	687a      	ldr	r2, [r7, #4]
 8000638:	7912      	ldrb	r2, [r2, #4]
 800063a:	4611      	mov	r1, r2
 800063c:	2201      	movs	r2, #1
 800063e:	408a      	lsls	r2, r1
 8000640:	4611      	mov	r1, r2
 8000642:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8000646:	430b      	orrs	r3, r1
 8000648:	6053      	str	r3, [r2, #4]
        }

        // 2. Configure the GPIO port selection in SYSCFG_EXTICR
        uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 800064a:	687b      	ldr	r3, [r7, #4]
 800064c:	791b      	ldrb	r3, [r3, #4]
 800064e:	089b      	lsrs	r3, r3, #2
 8000650:	74fb      	strb	r3, [r7, #19]
        uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000652:	687b      	ldr	r3, [r7, #4]
 8000654:	791b      	ldrb	r3, [r3, #4]
 8000656:	f003 0303 	and.w	r3, r3, #3
 800065a:	74bb      	strb	r3, [r7, #18]
        uint8_t portcode = GPIO_BADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	681b      	ldr	r3, [r3, #0]
 8000660:	4a86      	ldr	r2, [pc, #536]	@ (800087c <GPIO_Init+0x354>)
 8000662:	4293      	cmp	r3, r2
 8000664:	d047      	beq.n	80006f6 <GPIO_Init+0x1ce>
 8000666:	687b      	ldr	r3, [r7, #4]
 8000668:	681b      	ldr	r3, [r3, #0]
 800066a:	4a85      	ldr	r2, [pc, #532]	@ (8000880 <GPIO_Init+0x358>)
 800066c:	4293      	cmp	r3, r2
 800066e:	d040      	beq.n	80006f2 <GPIO_Init+0x1ca>
 8000670:	687b      	ldr	r3, [r7, #4]
 8000672:	681b      	ldr	r3, [r3, #0]
 8000674:	4a83      	ldr	r2, [pc, #524]	@ (8000884 <GPIO_Init+0x35c>)
 8000676:	4293      	cmp	r3, r2
 8000678:	d039      	beq.n	80006ee <GPIO_Init+0x1c6>
 800067a:	687b      	ldr	r3, [r7, #4]
 800067c:	681b      	ldr	r3, [r3, #0]
 800067e:	4a82      	ldr	r2, [pc, #520]	@ (8000888 <GPIO_Init+0x360>)
 8000680:	4293      	cmp	r3, r2
 8000682:	d032      	beq.n	80006ea <GPIO_Init+0x1c2>
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	681b      	ldr	r3, [r3, #0]
 8000688:	4a80      	ldr	r2, [pc, #512]	@ (800088c <GPIO_Init+0x364>)
 800068a:	4293      	cmp	r3, r2
 800068c:	d02b      	beq.n	80006e6 <GPIO_Init+0x1be>
 800068e:	687b      	ldr	r3, [r7, #4]
 8000690:	681b      	ldr	r3, [r3, #0]
 8000692:	4a7f      	ldr	r2, [pc, #508]	@ (8000890 <GPIO_Init+0x368>)
 8000694:	4293      	cmp	r3, r2
 8000696:	d024      	beq.n	80006e2 <GPIO_Init+0x1ba>
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	4a7d      	ldr	r2, [pc, #500]	@ (8000894 <GPIO_Init+0x36c>)
 800069e:	4293      	cmp	r3, r2
 80006a0:	d01d      	beq.n	80006de <GPIO_Init+0x1b6>
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	4a7c      	ldr	r2, [pc, #496]	@ (8000898 <GPIO_Init+0x370>)
 80006a8:	4293      	cmp	r3, r2
 80006aa:	d016      	beq.n	80006da <GPIO_Init+0x1b2>
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	4a7a      	ldr	r2, [pc, #488]	@ (800089c <GPIO_Init+0x374>)
 80006b2:	4293      	cmp	r3, r2
 80006b4:	d00f      	beq.n	80006d6 <GPIO_Init+0x1ae>
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	681b      	ldr	r3, [r3, #0]
 80006ba:	4a79      	ldr	r2, [pc, #484]	@ (80008a0 <GPIO_Init+0x378>)
 80006bc:	4293      	cmp	r3, r2
 80006be:	d008      	beq.n	80006d2 <GPIO_Init+0x1aa>
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	4a77      	ldr	r2, [pc, #476]	@ (80008a4 <GPIO_Init+0x37c>)
 80006c6:	4293      	cmp	r3, r2
 80006c8:	d101      	bne.n	80006ce <GPIO_Init+0x1a6>
 80006ca:	230a      	movs	r3, #10
 80006cc:	e014      	b.n	80006f8 <GPIO_Init+0x1d0>
 80006ce:	2300      	movs	r3, #0
 80006d0:	e012      	b.n	80006f8 <GPIO_Init+0x1d0>
 80006d2:	2309      	movs	r3, #9
 80006d4:	e010      	b.n	80006f8 <GPIO_Init+0x1d0>
 80006d6:	2308      	movs	r3, #8
 80006d8:	e00e      	b.n	80006f8 <GPIO_Init+0x1d0>
 80006da:	2307      	movs	r3, #7
 80006dc:	e00c      	b.n	80006f8 <GPIO_Init+0x1d0>
 80006de:	2306      	movs	r3, #6
 80006e0:	e00a      	b.n	80006f8 <GPIO_Init+0x1d0>
 80006e2:	2305      	movs	r3, #5
 80006e4:	e008      	b.n	80006f8 <GPIO_Init+0x1d0>
 80006e6:	2304      	movs	r3, #4
 80006e8:	e006      	b.n	80006f8 <GPIO_Init+0x1d0>
 80006ea:	2303      	movs	r3, #3
 80006ec:	e004      	b.n	80006f8 <GPIO_Init+0x1d0>
 80006ee:	2302      	movs	r3, #2
 80006f0:	e002      	b.n	80006f8 <GPIO_Init+0x1d0>
 80006f2:	2301      	movs	r3, #1
 80006f4:	e000      	b.n	80006f8 <GPIO_Init+0x1d0>
 80006f6:	2300      	movs	r3, #0
 80006f8:	747b      	strb	r3, [r7, #17]
        SYSCFG_PCLK_EN();
 80006fa:	4b6b      	ldr	r3, [pc, #428]	@ (80008a8 <GPIO_Init+0x380>)
 80006fc:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8000700:	4a69      	ldr	r2, [pc, #420]	@ (80008a8 <GPIO_Init+0x380>)
 8000702:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000706:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
        SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 800070a:	7c7a      	ldrb	r2, [r7, #17]
 800070c:	7cbb      	ldrb	r3, [r7, #18]
 800070e:	009b      	lsls	r3, r3, #2
 8000710:	fa02 f103 	lsl.w	r1, r2, r3
 8000714:	4a65      	ldr	r2, [pc, #404]	@ (80008ac <GPIO_Init+0x384>)
 8000716:	7cfb      	ldrb	r3, [r7, #19]
 8000718:	3302      	adds	r3, #2
 800071a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

        // 3. Enable the EXTI interrupt delivery using IMR
        EXTI->IMR1 |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800071e:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8000722:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8000726:	687a      	ldr	r2, [r7, #4]
 8000728:	7912      	ldrb	r2, [r2, #4]
 800072a:	4611      	mov	r1, r2
 800072c:	2201      	movs	r2, #1
 800072e:	408a      	lsls	r2, r1
 8000730:	4611      	mov	r1, r2
 8000732:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8000736:	430b      	orrs	r3, r1
 8000738:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
    }

    Rand = 0;
 800073c:	2300      	movs	r3, #0
 800073e:	82bb      	strh	r3, [r7, #20]

    // 2. Configure the speed
    temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	799b      	ldrb	r3, [r3, #6]
 8000744:	461a      	mov	r2, r3
 8000746:	687b      	ldr	r3, [r7, #4]
 8000748:	791b      	ldrb	r3, [r3, #4]
 800074a:	005b      	lsls	r3, r3, #1
 800074c:	fa02 f303 	lsl.w	r3, r2, r3
 8000750:	75fb      	strb	r3, [r7, #23]
    pGPIOHandle->pGPIOx->OSPEEDER &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // Clearing
 8000752:	687b      	ldr	r3, [r7, #4]
 8000754:	681b      	ldr	r3, [r3, #0]
 8000756:	689a      	ldr	r2, [r3, #8]
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	791b      	ldrb	r3, [r3, #4]
 800075c:	005b      	lsls	r3, r3, #1
 800075e:	2103      	movs	r1, #3
 8000760:	fa01 f303 	lsl.w	r3, r1, r3
 8000764:	43db      	mvns	r3, r3
 8000766:	4619      	mov	r1, r3
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	681b      	ldr	r3, [r3, #0]
 800076c:	400a      	ands	r2, r1
 800076e:	609a      	str	r2, [r3, #8]
    pGPIOHandle->pGPIOx->OSPEEDER |= temp; // Setting
 8000770:	687b      	ldr	r3, [r7, #4]
 8000772:	681b      	ldr	r3, [r3, #0]
 8000774:	6899      	ldr	r1, [r3, #8]
 8000776:	7dfa      	ldrb	r2, [r7, #23]
 8000778:	687b      	ldr	r3, [r7, #4]
 800077a:	681b      	ldr	r3, [r3, #0]
 800077c:	430a      	orrs	r2, r1
 800077e:	609a      	str	r2, [r3, #8]

    temp = 0;
 8000780:	2300      	movs	r3, #0
 8000782:	75fb      	strb	r3, [r7, #23]

    // 3. Configure the pull-up/pull-down settings
    temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	79db      	ldrb	r3, [r3, #7]
 8000788:	461a      	mov	r2, r3
 800078a:	687b      	ldr	r3, [r7, #4]
 800078c:	791b      	ldrb	r3, [r3, #4]
 800078e:	005b      	lsls	r3, r3, #1
 8000790:	fa02 f303 	lsl.w	r3, r2, r3
 8000794:	75fb      	strb	r3, [r7, #23]
    pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // Clearing
 8000796:	687b      	ldr	r3, [r7, #4]
 8000798:	681b      	ldr	r3, [r3, #0]
 800079a:	68da      	ldr	r2, [r3, #12]
 800079c:	687b      	ldr	r3, [r7, #4]
 800079e:	791b      	ldrb	r3, [r3, #4]
 80007a0:	005b      	lsls	r3, r3, #1
 80007a2:	2103      	movs	r1, #3
 80007a4:	fa01 f303 	lsl.w	r3, r1, r3
 80007a8:	43db      	mvns	r3, r3
 80007aa:	4619      	mov	r1, r3
 80007ac:	687b      	ldr	r3, [r7, #4]
 80007ae:	681b      	ldr	r3, [r3, #0]
 80007b0:	400a      	ands	r2, r1
 80007b2:	60da      	str	r2, [r3, #12]
    pGPIOHandle->pGPIOx->PUPDR |= temp; // Setting
 80007b4:	687b      	ldr	r3, [r7, #4]
 80007b6:	681b      	ldr	r3, [r3, #0]
 80007b8:	68d9      	ldr	r1, [r3, #12]
 80007ba:	7dfa      	ldrb	r2, [r7, #23]
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	681b      	ldr	r3, [r3, #0]
 80007c0:	430a      	orrs	r2, r1
 80007c2:	60da      	str	r2, [r3, #12]

    temp = 0;
 80007c4:	2300      	movs	r3, #0
 80007c6:	75fb      	strb	r3, [r7, #23]

    // 4. Configure the output type
    temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOtype << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	7a1b      	ldrb	r3, [r3, #8]
 80007cc:	461a      	mov	r2, r3
 80007ce:	687b      	ldr	r3, [r7, #4]
 80007d0:	791b      	ldrb	r3, [r3, #4]
 80007d2:	fa02 f303 	lsl.w	r3, r2, r3
 80007d6:	75fb      	strb	r3, [r7, #23]
    pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // Clearing
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	681b      	ldr	r3, [r3, #0]
 80007dc:	685a      	ldr	r2, [r3, #4]
 80007de:	687b      	ldr	r3, [r7, #4]
 80007e0:	791b      	ldrb	r3, [r3, #4]
 80007e2:	4619      	mov	r1, r3
 80007e4:	2301      	movs	r3, #1
 80007e6:	408b      	lsls	r3, r1
 80007e8:	43db      	mvns	r3, r3
 80007ea:	4619      	mov	r1, r3
 80007ec:	687b      	ldr	r3, [r7, #4]
 80007ee:	681b      	ldr	r3, [r3, #0]
 80007f0:	400a      	ands	r2, r1
 80007f2:	605a      	str	r2, [r3, #4]
    pGPIOHandle->pGPIOx->OTYPER |= temp;  // Setting
 80007f4:	687b      	ldr	r3, [r7, #4]
 80007f6:	681b      	ldr	r3, [r3, #0]
 80007f8:	6859      	ldr	r1, [r3, #4]
 80007fa:	7dfa      	ldrb	r2, [r7, #23]
 80007fc:	687b      	ldr	r3, [r7, #4]
 80007fe:	681b      	ldr	r3, [r3, #0]
 8000800:	430a      	orrs	r2, r1
 8000802:	605a      	str	r2, [r3, #4]

    temp = 0;
 8000804:	2300      	movs	r3, #0
 8000806:	75fb      	strb	r3, [r7, #23]

    // 5. Configure the alternate functionality
    if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_AF)
 8000808:	687b      	ldr	r3, [r7, #4]
 800080a:	795b      	ldrb	r3, [r3, #5]
 800080c:	2b02      	cmp	r3, #2
 800080e:	d131      	bne.n	8000874 <GPIO_Init+0x34c>
    {
        // Configure the alt function registers.
        uint8_t temp1, temp2;
        temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000810:	687b      	ldr	r3, [r7, #4]
 8000812:	791b      	ldrb	r3, [r3, #4]
 8000814:	08db      	lsrs	r3, r3, #3
 8000816:	743b      	strb	r3, [r7, #16]
        temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000818:	687b      	ldr	r3, [r7, #4]
 800081a:	791b      	ldrb	r3, [r3, #4]
 800081c:	f003 0307 	and.w	r3, r3, #7
 8000820:	73fb      	strb	r3, [r7, #15]
        pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 8000822:	687b      	ldr	r3, [r7, #4]
 8000824:	681b      	ldr	r3, [r3, #0]
 8000826:	7c3a      	ldrb	r2, [r7, #16]
 8000828:	3208      	adds	r2, #8
 800082a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800082e:	7bfb      	ldrb	r3, [r7, #15]
 8000830:	009b      	lsls	r3, r3, #2
 8000832:	220f      	movs	r2, #15
 8000834:	fa02 f303 	lsl.w	r3, r2, r3
 8000838:	43db      	mvns	r3, r3
 800083a:	4618      	mov	r0, r3
 800083c:	687b      	ldr	r3, [r7, #4]
 800083e:	681b      	ldr	r3, [r3, #0]
 8000840:	7c3a      	ldrb	r2, [r7, #16]
 8000842:	4001      	ands	r1, r0
 8000844:	3208      	adds	r2, #8
 8000846:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
        pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunction << (4 * temp2));
 800084a:	687b      	ldr	r3, [r7, #4]
 800084c:	681b      	ldr	r3, [r3, #0]
 800084e:	7c3a      	ldrb	r2, [r7, #16]
 8000850:	3208      	adds	r2, #8
 8000852:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000856:	687b      	ldr	r3, [r7, #4]
 8000858:	7a5b      	ldrb	r3, [r3, #9]
 800085a:	461a      	mov	r2, r3
 800085c:	7bfb      	ldrb	r3, [r7, #15]
 800085e:	009b      	lsls	r3, r3, #2
 8000860:	fa02 f303 	lsl.w	r3, r2, r3
 8000864:	4618      	mov	r0, r3
 8000866:	687b      	ldr	r3, [r7, #4]
 8000868:	681b      	ldr	r3, [r3, #0]
 800086a:	7c3a      	ldrb	r2, [r7, #16]
 800086c:	4301      	orrs	r1, r0
 800086e:	3208      	adds	r2, #8
 8000870:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    }
}
 8000874:	bf00      	nop
 8000876:	3718      	adds	r7, #24
 8000878:	46bd      	mov	sp, r7
 800087a:	bd80      	pop	{r7, pc}
 800087c:	58020000 	.word	0x58020000
 8000880:	58020400 	.word	0x58020400
 8000884:	58020800 	.word	0x58020800
 8000888:	58020c00 	.word	0x58020c00
 800088c:	58021000 	.word	0x58021000
 8000890:	58021400 	.word	0x58021400
 8000894:	58021800 	.word	0x58021800
 8000898:	58021c00 	.word	0x58021c00
 800089c:	58022000 	.word	0x58022000
 80008a0:	58022400 	.word	0x58022400
 80008a4:	58022800 	.word	0x58022800
 80008a8:	58024400 	.word	0x58024400
 80008ac:	58000400 	.word	0x58000400

080008b0 <GPIO_ToggleOutputPin>:
}



void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80008b0:	b480      	push	{r7}
 80008b2:	b083      	sub	sp, #12
 80008b4:	af00      	add	r7, sp, #0
 80008b6:	6078      	str	r0, [r7, #4]
 80008b8:	460b      	mov	r3, r1
 80008ba:	70fb      	strb	r3, [r7, #3]
   pGPIOx->ODR ^= ( 1 << PinNumber);
 80008bc:	687b      	ldr	r3, [r7, #4]
 80008be:	695b      	ldr	r3, [r3, #20]
 80008c0:	78fa      	ldrb	r2, [r7, #3]
 80008c2:	2101      	movs	r1, #1
 80008c4:	fa01 f202 	lsl.w	r2, r1, r2
 80008c8:	405a      	eors	r2, r3
 80008ca:	687b      	ldr	r3, [r7, #4]
 80008cc:	615a      	str	r2, [r3, #20]
}
 80008ce:	bf00      	nop
 80008d0:	370c      	adds	r7, #12
 80008d2:	46bd      	mov	sp, r7
 80008d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008d8:	4770      	bx	lr
	...

080008dc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80008dc:	480d      	ldr	r0, [pc, #52]	@ (8000914 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80008de:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80008e0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80008e4:	480c      	ldr	r0, [pc, #48]	@ (8000918 <LoopForever+0x6>)
  ldr r1, =_edata
 80008e6:	490d      	ldr	r1, [pc, #52]	@ (800091c <LoopForever+0xa>)
  ldr r2, =_sidata
 80008e8:	4a0d      	ldr	r2, [pc, #52]	@ (8000920 <LoopForever+0xe>)
  movs r3, #0
 80008ea:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80008ec:	e002      	b.n	80008f4 <LoopCopyDataInit>

080008ee <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80008ee:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80008f0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80008f2:	3304      	adds	r3, #4

080008f4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80008f4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80008f6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80008f8:	d3f9      	bcc.n	80008ee <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80008fa:	4a0a      	ldr	r2, [pc, #40]	@ (8000924 <LoopForever+0x12>)
  ldr r4, =_ebss
 80008fc:	4c0a      	ldr	r4, [pc, #40]	@ (8000928 <LoopForever+0x16>)
  movs r3, #0
 80008fe:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000900:	e001      	b.n	8000906 <LoopFillZerobss>

08000902 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000902:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000904:	3204      	adds	r2, #4

08000906 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000906:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000908:	d3fb      	bcc.n	8000902 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800090a:	f000 f811 	bl	8000930 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800090e:	f7ff fcf9 	bl	8000304 <main>

08000912 <LoopForever>:

LoopForever:
  b LoopForever
 8000912:	e7fe      	b.n	8000912 <LoopForever>
  ldr   r0, =_estack
 8000914:	24080000 	.word	0x24080000
  ldr r0, =_sdata
 8000918:	24000000 	.word	0x24000000
  ldr r1, =_edata
 800091c:	24000000 	.word	0x24000000
  ldr r2, =_sidata
 8000920:	08000998 	.word	0x08000998
  ldr r2, =_sbss
 8000924:	24000000 	.word	0x24000000
  ldr r4, =_ebss
 8000928:	2400001c 	.word	0x2400001c

0800092c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800092c:	e7fe      	b.n	800092c <ADC1_2_IRQHandler>
	...

08000930 <__libc_init_array>:
 8000930:	b570      	push	{r4, r5, r6, lr}
 8000932:	4d0d      	ldr	r5, [pc, #52]	@ (8000968 <__libc_init_array+0x38>)
 8000934:	4c0d      	ldr	r4, [pc, #52]	@ (800096c <__libc_init_array+0x3c>)
 8000936:	1b64      	subs	r4, r4, r5
 8000938:	10a4      	asrs	r4, r4, #2
 800093a:	2600      	movs	r6, #0
 800093c:	42a6      	cmp	r6, r4
 800093e:	d109      	bne.n	8000954 <__libc_init_array+0x24>
 8000940:	4d0b      	ldr	r5, [pc, #44]	@ (8000970 <__libc_init_array+0x40>)
 8000942:	4c0c      	ldr	r4, [pc, #48]	@ (8000974 <__libc_init_array+0x44>)
 8000944:	f000 f818 	bl	8000978 <_init>
 8000948:	1b64      	subs	r4, r4, r5
 800094a:	10a4      	asrs	r4, r4, #2
 800094c:	2600      	movs	r6, #0
 800094e:	42a6      	cmp	r6, r4
 8000950:	d105      	bne.n	800095e <__libc_init_array+0x2e>
 8000952:	bd70      	pop	{r4, r5, r6, pc}
 8000954:	f855 3b04 	ldr.w	r3, [r5], #4
 8000958:	4798      	blx	r3
 800095a:	3601      	adds	r6, #1
 800095c:	e7ee      	b.n	800093c <__libc_init_array+0xc>
 800095e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000962:	4798      	blx	r3
 8000964:	3601      	adds	r6, #1
 8000966:	e7f2      	b.n	800094e <__libc_init_array+0x1e>
 8000968:	08000990 	.word	0x08000990
 800096c:	08000990 	.word	0x08000990
 8000970:	08000990 	.word	0x08000990
 8000974:	08000994 	.word	0x08000994

08000978 <_init>:
 8000978:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800097a:	bf00      	nop
 800097c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800097e:	bc08      	pop	{r3}
 8000980:	469e      	mov	lr, r3
 8000982:	4770      	bx	lr

08000984 <_fini>:
 8000984:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000986:	bf00      	nop
 8000988:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800098a:	bc08      	pop	{r3}
 800098c:	469e      	mov	lr, r3
 800098e:	4770      	bx	lr
